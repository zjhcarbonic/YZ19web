# 计算遗传距离
calculate_genetic_distance <- function(genotype_data) {
# 获取品种数量
num_varieties <- nrow(genotype_data)
# 创建一个空的遗传距离矩阵
distance_matrix <- matrix(0, nrow = num_varieties, ncol = num_varieties)
# 命名行和列
rownames(distance_matrix) <- rownames(genotype_data)
colnames(distance_matrix) <- rownames(genotype_data)
# 逐对计算遗传距离
for (i in 1:num_varieties) {
for (j in i:num_varieties) {
# 计算不同标记的数量
different_markers <- sum(genotype_data[i, ] != genotype_data[j, ])
# 计算遗传距离（不同标记数占总标记数的比值）
genetic_distance <- different_markers / ncol(genotype_data)
# 填充矩阵
distance_matrix[i, j] <- genetic_distance
distance_matrix[j, i] <- genetic_distance  # 对称填充
}
}
return(distance_matrix)
}
# 计算并输出遗传距离矩阵
genetic_distance_matrix <- calculate_genetic_distance(data)
# 对距离矩阵进行聚类
hc <- hclust(as.dist(genetic_distance_matrix), method = "ward.D2")
# 绘制聚类树状图
plot(hc, labels = rownames(genetic_distance_matrix), main = "Cluster Dendrogram", sub = "", xlab = "")
genetic_distance_matrix
write.csv(genetic_distance_matrix,'genetic_distance_matrix.csv',row.names = T)
shiny::runApp()
data=read.table('clipboard',header = T)
data
rownames(data)=data[,1]
data=data[,-1:-2]
data
# 计算遗传距离
calculate_genetic_distance <- function(genotype_data) {
# 获取品种数量
num_varieties <- nrow(genotype_data)
# 创建一个空的遗传距离矩阵
distance_matrix <- matrix(0, nrow = num_varieties, ncol = num_varieties)
# 命名行和列
rownames(distance_matrix) <- rownames(genotype_data)
colnames(distance_matrix) <- rownames(genotype_data)
# 逐对计算遗传距离
for (i in 1:num_varieties) {
for (j in i:num_varieties) {
# 计算不同标记的数量
different_markers <- sum(genotype_data[i, ] != genotype_data[j, ])
# 计算遗传距离（不同标记数占总标记数的比值）
genetic_distance <- different_markers / ncol(genotype_data)
# 填充矩阵
distance_matrix[i, j] <- genetic_distance
distance_matrix[j, i] <- genetic_distance  # 对称填充
}
}
return(distance_matrix)
}
# 计算并输出遗传距离矩阵
genetic_distance_matrix <- calculate_genetic_distance(data)
genetic_distance_matrix
View(genetic_distance_matrix)
genetic_distance_matrix*76
genetic_distance_matrix_count=genetic_distance_matrix*76
View(genetic_distance_matrix)
View(genetic_distance_matrix_count)
table(genetic_distance_matrix_count)
genetic_distance_matrix_count[genetic_distance_matrix_count==1]
genetic_distance_matrix_count[genetic_distance_matrix_count==7]
genetic_distance_matrix_count[genetic_distance_matrix_count==7,]
genetic_distance_matrix_count[genetic_distance_matrix_count==7]
genetic_distance_matrix_count[genetic_distance_matrix_count==6]
genetic_distance_matrix_count[genetic_distance_matrix_count==8]
data=read.table('clipboard',header = F)
data
library(tidyverse)
lt=data|>transmute(id=V1,marker=paste0(V2:V121,','))
lt=data|>transmute(id=V1,marker=paste0(V2:V121,collapse = ','))
lt
data %>%
pivot_longer(cols = starts_with("V"), names_to = "key", values_to = "value")
data %>%
pivot_longer(-1, names_to = "key", values_to = "value")
lt=data %>%
pivot_longer(-1, names_to = "key", values_to = "value") %>%
group_by(id = V1) %>%
summarise(marker = paste(value, collapse = ','), .groups = 'drop')
lt
data %>%
pivot_longer(-1, names_to = "key", values_to = "value")
rep(seq(1:2))
rep(seq(1:2),2)
rep(seq(1:2),each=2)
rep(paste0('M',1:60,collapse = ''),each=2)
rep(paste0('M',1:60),each=2),
paste0('M',1:60
paste0('M',1:60)
rep(paste0('M',1:60),each=2)
marker=paste0('M',1:60)|>rep(each=2)
marker=paste0('M',1:60)|>rep(each=2)|>rep(192)
marker
rep(1:2,60)
ale=rep(1:2,60)|>rep(192)
data %>%
pivot_longer(-1, names_to = "key", values_to = "value") %>%
transmute(id=V1,value,marker=marker,each=2),ale=ale)
lt=data %>%
pivot_longer(-1, names_to = "key", values_to = "value") %>%
transmute(id=V1,value,marker=marker,each=2,ale=ale)
lt
lt=data %>%
pivot_longer(-1, names_to = "key", values_to = "value") %>%
transmute(id=V1,value,marker=marker,ale=ale)
lt
lt=data %>%
pivot_longer(-1, names_to = "key", values_to = "value") %>%
transmute(id=V1,value,marker=marker)
lt
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=marker)|>
group_by(id,marker) |>
arrange(desc(value))
lt
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=marker)|>
arrange(id,marker,desc(value))
lt
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(marker,levels=paste0('M',1:60)))|>
arrange(id,marker,desc(value),)
lt
View(lt)
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(marker,levels=paste0('M',1:60)))|>
arrange(id,marker,desc(value))|>
pivot_wider(id_expand = value,names_from = marker)
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(marker,levels=paste0('M',1:60)))|>
arrange(id,marker,desc(value))|>
pivot_wider(names_from = marker,values_from = value)
lt
paste0('M',1:60)|>rep(each=2)
paste0('M',1:60)|>rep(each=2)|>paste0(c('_1','_2'))
marker=paste0('M',1:60)|>rep(each=2)|>paste0(c('_1','_2'))|>rep(192)
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(marker,levels=paste0('M',1:60)))|>
arrange(id,marker,desc(value))|>
pivot_wider(names_from = marker,values_from = value)
lt
data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(marker,levels=paste0('M',1:60)))|>
arrange(id,marker,desc(value))
marker=paste0('M',1:60)|>rep(each=2)|>paste0(c('_1','_2'))|>rep(192)
marker
paste0('M',1:60))
paste0('M',1:60)
marker=paste0('M',1:60)|>rep(each=2)|>paste0(c('_1','_2'))
marker
lt=data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(rep(marker,192),levels=marker))|>
arrange(id,marker,desc(value))|>
pivot_wider(names_from = marker,values_from = value)
lt
View(lt)
arrange(c(1:4))
data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(rep(marker,192),levels=marker))
marker=paste0('M',1:60)|>rep(each=2)
data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(rep(marker,192),levels=marker))
data |>
pivot_longer(-1, names_to = "key", values_to = "value")|>
transmute(id=V1,value,marker=factor(rep(marker,192),levels=paste0('M',1:60)))
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))|>
pivot_wider(names_from = marker,values_from = value)
marker
lt
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))
lt
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))|>
mutate(marker=paste0(marker,ale,sep='_'))
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))|>
mutate(marker=paste0(marker,ale,collapse = '_'))
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))|>
mutate(marker=paste(marker,ale,sep  = '_'))
pivot_wider(id_cols = id,names_from = marker,values_from = value)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
lt
View(lt)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,value)|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))
colnames(lt)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,value)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,value)|>filter(id=1103)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,value)|>filter(id==1103)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60)),
ale=rep(1:2,192*60))|>
arrange(id,marker,desc(value))|>filter(id==1103)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,desc(value))|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,desc(value))|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
View(lt)
lt
write.csv(lt,'lt.csv')
marker
data
library(tidyverse)
lt
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
write.csv(lt,'lt.csv')
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)|>
mutate_at(vars(starts_with("X")), ~ ifelse(cur_column() %% 2 == 1, paste(., lag(.)), NA))
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)|>
mutate_at(vars(starts_with("M")), ~ ifelse(cur_column() %% 2 == 1, paste(., lag(.)), NA))
data
data=read.table('clipboard',header = F)
data=read.table('clipboard',header = F)
rownames(data)=data[,1]
data=data[,-1:-2]
data
data=read.table('clipboard',header = F)
rownames(data)=data[,1]
data=data[,-1]
data
marker=paste0('M',1:76)|>rep(each=2)
marker
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
library(tidyverse)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
marker
data
data=read.table('clipboard',header = F)
data
data=read.table('clipboard',header = F)
data
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:60))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
192/2
data=read.table('clipboard',header = F)
158/2
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:79))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
marker=paste0('M',1:79)|>rep(each=2)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,158),levels=paste0('M',1:79))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")
rep(marker,158)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,79),levels=paste0('M',1:79))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:79))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*60))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
lt=data |>
pivot_longer(-1,
names_to = "key",
values_to = "value")|>
transmute(id=V1,
value,
marker=factor(rep(marker,192),levels=paste0('M',1:79))
)|>
arrange(id,marker,value)|>
mutate(ale=rep(1:2,192*79))|>
mutate(marker=paste(marker,ale,sep  = '_'))|>
pivot_wider(id_cols = id,names_from = marker,values_from = value)
lt
write.csv(lt,'lt.csv')
shiny::runApp()
